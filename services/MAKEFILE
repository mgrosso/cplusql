#----------------------------------------------------------------------------
#
# Makefile,v 1.26 2003/11/07 06:45:18 dhinton Exp
#
#----------------------------------------------------------------------------

#----------------------------------------------------------------------------
#       Local macros
#----------------------------------------------------------------------------

debug = 1

optimize = 0

ifndef TAO_ROOT
  TAO_ROOT = $(ACE_ROOT)/TAO
endif # ! TAO_ROOT

ifndef FRAMEDIR
    FRAMEDIR = ../../frame
endif

#LDFLAGS = -L../idl -L$(FRAMEDIR)/src/
LDFLAGS = -L../idl 
CPPFLAGS += -I../idl -I../inc -I$(FRAMEDIR)/inc -DALLOW_FALSE_FAILURES=1

LDLIBS = -ldl ../idl/libJobQueue_Common.a -lTAO_CosNaming -lTAO_PortableServer -lTAO_Valuetype -lTAO_ObjRefTemplate -lTAO_IORInterceptor -lTAO ${FRAMEDIR}/src/libframe.a -ldl 
#LDLIBS = ../idl/libJobQueue_Common.a -L/home/mgrosso/sandbox-linux/bi/lib/i686/ -lTAO_CosNaming -lTAO_PortableServer -lTAO_Valuetype -lTAO_ObjRefTemplate -lTAO_IORInterceptor -lTAO -lframe

##############

TEST_NARROW_BIN = TestNarrow
TEST_NARROW_SRC = $(addsuffix .cpp, $(TEST_NARROW_BIN) )
TEST_NARROW_OBJS = $(TEST_NARROW_SRC:.cpp=.o)

G_SERVER_BIN = GenericService
G_SERVER_SRC = $(addsuffix .cpp, $(G_SERVER_BIN) GenericServiceImpl ShutdownHandler )
G_SERVER_OBJS = $(G_SERVER_SRC:.cpp=.o)
G_CLIENT_BIN = GenericClient
G_CLIENT_SRC = $(addsuffix .cpp, $(G_CLIENT_BIN) SharedServiceMain NVPairUtil NodeCntl )
G_CLIENT_OBJS = $(G_CLIENT_SRC:.cpp=.o)

G_PING_BIN = PingClient
G_PING_SRC = $(addsuffix .cpp, $(G_PING_BIN) SharedServiceMain NVPairUtil NodeCntl )
G_PING_OBJS = $(G_PING_SRC:.cpp=.o)



##############

JQ_SERVER_BIN = JobQueueService
JQ_SERVER_SRC = $(addsuffix .cpp, $(JQ_SERVER_BIN) JobQueueServiceImpl StateQueues ServiceStatusMap SharedServiceMain NVPairUtil NodeCntl ShutdownHandler )
JQ_SERVER_OBJS = $(JQ_SERVER_SRC:.cpp=.o)
JQ_CLIENT_BIN = JobQueueClient
JQ_CLIENT_SRC = $(addsuffix .cpp, $(JQ_CLIENT_BIN) ServiceStatusMap SharedServiceMain NVPairUtil NodeCntl )
JQ_CLIENT_OBJS = $(JQ_CLIENT_SRC:.cpp=.o)

##############

JE_SERVER_BIN = JobExecService
JE_SERVER_SRC = $(addsuffix .cpp, $(JE_SERVER_BIN) JobExecServiceImpl SharedServiceMain NVPairUtil NodeCntl ShutdownHandler )
JE_SERVER_OBJS = $(JE_SERVER_SRC:.cpp=.o)
JE_CLIENT_BIN = JobExecClient
JE_CLIENT_SRC = $(addsuffix .cpp, $(JE_CLIENT_BIN) SharedServiceMain NVPairUtil NodeCntl )
JE_CLIENT_OBJS = $(JE_CLIENT_SRC:.cpp=.o)

##############

NM_SERVER_BIN = NodeMonitorService
NM_SERVER_SRC = $(addsuffix .cpp, $(NM_SERVER_BIN) NodeMonitorServiceImpl ServiceStatusMap SharedServiceMain NVPairUtil NodeCntl ShutdownHandler )
NM_SERVER_OBJS = $(NM_SERVER_SRC:.cpp=.o)
NM_CLIENT_BIN = NodeMonitorClient
NM_CLIENT_SRC = $(addsuffix .cpp, $(NM_CLIENT_BIN) ServiceStatusMap SharedServiceMain NVPairUtil NodeCntl )
NM_CLIENT_OBJS = $(NM_CLIENT_SRC:.cpp=.o)

##############

NS_NAME = NameSpace
NS_SERVER_BIN = $(NS_NAME)Service
NS_SERVER_SRC = $(addsuffix .cpp, $(NS_SERVER_BIN) $(NS_NAME)ServiceImpl SharedServiceMain NVPairUtil NodeCntl ShutdownHandler )
NS_SERVER_OBJS = $(NS_SERVER_SRC:.cpp=.o)
NS_CLIENT_BIN = $(NS_NAME)Client
NS_CLIENT_SRC = $(addsuffix .cpp, $(NS_CLIENT_BIN) SharedServiceMain NVPairUtil NodeCntl )
NS_CLIENT_OBJS = $(NS_CLIENT_SRC:.cpp=.o)

##############

RW_SERVER_BIN = ReadWriteService
RW_SERVER_SRC= $(addsuffix .cpp, $(RW_SERVER_BIN) ReadWriteServiceImpl AuditLog FileIO FileHandler NVPairUtil ReadWriteController RWSExceptions RWSRunnable SharedServiceMain NodeCntl ShutdownHandler )
RW_SERVER_OBJS = $(RW_SERVER_SRC:.cpp=.o)
RW_CLIENT_BIN = ReadWriteClient
RW_CLIENT_SRC = $(addsuffix .cpp, $(RW_CLIENT_BIN) AuditLog FileIO FileHandler NVPairUtil ReadWriteController RWSExceptions RWSRunnable SharedServiceMain NodeCntl )
RW_CLIENT_OBJS = $(RW_CLIENT_SRC:.cpp=.o)
RW_API_BIN = ReadWriteApiTest
RW_API_SRC = $(addsuffix .cpp, $(RW_API_BIN) AuditLog FileIO FileHandler NVPairUtil ReadWriteController RWSExceptions RWSRunnable SharedServiceMain NodeCntl )
RW_API_OBJS = $(RW_API_SRC:.cpp=.o)





#----------------------------------------------------------------------------
# Include macros and targets
#----------------------------------------------------------------------------

include $(ACE_ROOT)/include/makeinclude/wrapper_macros.GNU
include $(ACE_ROOT)/include/makeinclude/macros.GNU
include $(TAO_ROOT)/rules.tao.GNU
include $(ACE_ROOT)/include/makeinclude/rules.common.GNU
include $(ACE_ROOT)/include/makeinclude/rules.nonested.GNU
include $(ACE_ROOT)/include/makeinclude/rules.local.GNU
include $(TAO_ROOT)/taoconfig.mk

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

all: g jq nm je ns rw

jobexec: je

tn: $(TEST_NARROW_BIN)
g: $(G_CLIENT_BIN) $(G_PING_BIN)
jq: $(JQ_SERVER_BIN) $(JQ_CLIENT_BIN)
je: $(JE_SERVER_BIN) $(JE_CLIENT_BIN)
nm: $(NM_SERVER_BIN) $(NM_CLIENT_BIN)
ns: $(NS_SERVER_BIN) $(NS_CLIENT_BIN)
rw: rwa rwc rws


rws: $(RW_SERVER_BIN)
rwc: $(RW_CLIENT_BIN)
rwa: $(RW_API_BIN)

$(TEST_NARROW_BIN): $(addprefix $(VDIR),$(TEST_NARROW_OBJS))
	$(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)

$(G_SERVER_BIN): $(addprefix $(VDIR),$(G_SERVER_OBJS))
	$(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)

$(G_PING_BIN): $(addprefix $(VDIR),$(G_PING_OBJS))
	$(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)

$(G_CLIENT_BIN):  $(addprefix $(VDIR),$(G_CLIENT_OBJS))
	$(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)

$(JQ_SERVER_BIN): $(addprefix $(VDIR),$(JQ_SERVER_OBJS))
	$(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)

$(JQ_CLIENT_BIN):  $(addprefix $(VDIR),$(JQ_CLIENT_OBJS))
	$(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)

$(JE_SERVER_BIN): $(addprefix $(VDIR),$(JE_SERVER_OBJS))
	$(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)

$(JE_CLIENT_BIN):  $(addprefix $(VDIR),$(JE_CLIENT_OBJS))
	$(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)

$(NM_SERVER_BIN): $(addprefix $(VDIR),$(NM_SERVER_OBJS))
	$(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)

$(NM_CLIENT_BIN):  $(addprefix $(VDIR),$(NM_CLIENT_OBJS))
	$(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)


$(NS_SERVER_BIN): $(addprefix $(VDIR),$(NS_SERVER_OBJS))
	$(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)

$(NS_CLIENT_BIN):  $(addprefix $(VDIR),$(NS_CLIENT_OBJS))
	$(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)

$(RW_SERVER_BIN):  $(addprefix $(VDIR),$(RW_SERVER_OBJS))
	$(PURIFY) $(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)

$(RW_CLIENT_BIN):  $(addprefix $(VDIR),$(RW_CLIENT_OBJS))
	$(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)

$(RW_API_BIN):  $(addprefix $(VDIR),$(RW_API_OBJS))
	$(LINK.cc) $(LDFLAGS) -o $@ $^ $(VLDLIBS) $(POSTLINK)

clean:
	$(RM) -f $(G_SERVER_BIN) $(G_CLIENT_BIN) $(JQ_SERVER_BIN) $(JQ_CLIENT_BIN)
	$(RM) -f $(JE_SERVER_BIN) $(JE_CLIENT_BIN) $(NM_SERVER_BIN) $(NM_CLIENT_BIN) $(NS_SERVER_BIN) $(NS_CLIENT_BIN)
	$(RM) -f $(RW_SERVER_BIN) $(RW_CLIENT_BIN) $(RW_API_BIN) $(G_PING_BIN)
	$(RM) .obj/*.o

distclean: clean
	$(RM) .depend

depend:
	touch .depend
	makedepend $(CPPFLAGS) -f - $(G_SERVER_SRC) $(G_CLIENT_SRC) $(JQ_SERVER_SRC) $(JQ_CLIENT_SRC) $(NM_SERVER_SRC) $(NM_CLIENT_SRC) $(JE_SERVER_SRC) $(JE_CLIENT_SRC) $(RW_SERVER_SRC) $(RW_CLIENT_SRC) $(RW_API_SRC) | grep -v '<' > .depend 2>/dev/null

#include .depend

# DO NOT DELETE THIS LINE -- g++dep uses it.
# DO NOT PUT ANYTHING AFTER THIS LINE, IT WILL GO AWAY.



# IF YOU PUT ANYTHING HERE IT WILL GO AWAY
