// -*- C++ -*-
//
// $Id: JobQueueServiceImpl.h,v 1.13 2004/04/08 18:12:55 holahrei Exp $

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from 
// be/be_codegen.cpp:922

#ifndef JOBQUEUESERVICEI_H_
#define JOBQUEUESERVICEI_H_

#include "JobQueueServiceS.h"
#include "Config.h"
#include "ptr_strdup.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
#pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

class JobQueueServicePriv ;

//Class JobQueue_JobQueueServiceImpl
class  JobQueue_JobQueueServiceImpl : public virtual POA_JobQueue::JobQueueService
{
public:
  //Constructor 
  JobQueue_JobQueueServiceImpl (const Config &c );
  
  //Destructor 
  virtual ~JobQueue_JobQueueServiceImpl (void);
  


virtual ::JobQueue::JobIdList * submit (
    const JobQueue::ExecArgsList & execArgsList
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , Service::ServiceException
    , Service::PendingShutdownException
  ));

virtual ::JobQueue::JobStateIdList * waitForStatusList (
    const JobQueue::JobIdList & jobIds,
    Service::time_t timeout
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , Service::ServiceException
    , Service::PendingShutdownException
  ));

virtual ::JobQueue::JobStateId waitForStatus (
    const char * jobId,
    Service::time_t timeout
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , Service::ServiceException
    , Service::PendingShutdownException
  ));// TAO_IDL - Generated from

virtual void jobFinished (
    const JobQueue::ExecutionStatusStruct & executionStatus
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , Service::ServiceException
    , Service::PendingShutdownException
  ));

virtual void killAllJobs (
    JobQueue::num_threads_t numThreads
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , Service::ServiceException
  ));// TAO_IDL - Generated from
// be/be_visitor_operation/operation_ih.cpp:43

virtual void cleanupStaleOutput (
    JobQueue::num_threads_t numThreads
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , Service::ServiceException
  ));// TAO_IDL - Generated from
// be/be_visitor_operation/operation_ih.cpp:43

virtual void shutdownNow (
    
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , Service::ServiceException
  ));// TAO_IDL - Generated from
// be/be_visitor_operation/operation_ih.cpp:43

virtual void ping (
    
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , Service::ServiceException
    , Service::PendingShutdownException
  ));

virtual ::Service::ServiceStatus * pullStatus (
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , Service::ServiceException
  ));

virtual void reconfigure (
    const Service::NVPairList & configuration
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , Service::ServiceException
    , Service::PendingShutdownException
  ));

virtual void gracefulShutdown (
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , Service::ServiceException
    , Service::PendingShutdownException
  ));

virtual void pushStatusList (
    const Service::ServiceStatusList & serviceStatusList
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
    , Service::ServiceException
    , Service::PendingShutdownException
  ));

private:
    char_ptr generateJobId() const;
    JobQueueServicePriv *d_;
};


#endif /* JOBQUEUESERVICEI_H_  */
