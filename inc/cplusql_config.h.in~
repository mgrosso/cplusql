/* inc/cplusql_config.h.in.  Generated from configure.ac by autoheader.  */

/* Define to 0, or 1 if you have the postgres framework. */
#undef APP_HAS_GNUGLOB

/* Define to 0, or 1 if you have the ace framework. */
#undef APP_USES_ACE

/* which kind of semaphore implementation to use */
#undef APP_USES_ACE_SEMAPHORE

/* Define to 0, or 1 if you have the oracle framework. */
#undef APP_USES_ORACLE

/* Define to 0, or 1 if you have the postgres framework. */
#undef APP_USES_POSTGRES

/* which kind of semaphore implementation to use */
#undef APP_USES_PTHREAD_SEMAPHORE

/* which kind of semaphore implementation to use */
#undef APP_USES_SOLARIS_SEMAPHORE

/* whether to build distributed services */
#undef BUILD_SERVICES

/* define if ctime_r works. */
#undef HAVE_CTIME_R

/* define if the compiler has ext/hash_map */
#undef HAVE_EXT_HASH_MAP

/* Define to 1 if you have the `fork' function. */
#undef HAVE_FORK

/* define if the compiler needs namespace __gnu_cxx for hash_map */
#undef HAVE_GNU_CXX_HASH_MAP

/* define if glob.h has gnu extensions GLOB_TILDE and GLOB_BRACE */
#undef HAVE_GNU_GLOB

/* define if the compiler has hash_map */
#undef HAVE_HASH_MAP

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define to 1 if you have the <libpq-fe.h> header file. */
#undef HAVE_LIBPQ_FE_H

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* define if the compiler implements namespaces */
#undef HAVE_NAMESPACES

/* Define to 1 if stdbool.h conforms to C99. */
#undef HAVE_STDBOOL_H

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define to 1 if you have the `vfork' function. */
#undef HAVE_VFORK

/* Define to 1 if you have the <vfork.h> header file. */
#undef HAVE_VFORK_H

/* Define to 1 if `fork' works. */
#undef HAVE_WORKING_FORK

/* Define to 1 if `vfork' works. */
#undef HAVE_WORKING_VFORK

/* Define to 1 if the system has the type `_Bool'. */
#undef HAVE__BOOL

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Define to one of 0 or 1, or leave it undefined. */
#undef PTR_USES_ASM_SEMAPHORE

/* Define as the return type of signal handlers (`int' or `void'). */
#undef RETSIGTYPE

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Version number of package */
#undef VERSION

/* Define if using the dmalloc debugging malloc package */
#undef WITH_DMALLOC

/* Define to 1 if `lex' declares `yytext' as a `char *' by default, not a
   `char[]'. */
#undef YYTEXT_POINTER

/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# undef _GNU_SOURCE
#endif

/* need this in order to get long double functions */
#undef _ISOC99_SOURCE

/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif

/* Define to `long' if <sys/types.h> does not define. */
#undef off_t

/* Define to `int' if <sys/types.h> does not define. */
#undef pid_t

/* Define to `unsigned' if <sys/types.h> does not define. */
#undef size_t

/* Define as `fork' if `vfork' does not work. */
#undef vfork
